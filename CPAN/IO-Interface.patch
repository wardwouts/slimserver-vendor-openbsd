--- Interface.xs.orig	Wed Aug 31 22:11:26 2011
+++ Interface.xs	Thu Apr 24 23:04:38 2014
@@ -2,6 +2,9 @@
 #include "perl.h"
 #include "XSUB.h"
 
+#include <stdio.h>
+#include <string.h>
+
 /* socket definitions */
 #include <sys/types.h>
 #include <sys/socket.h>
@@ -511,6 +514,9 @@
 	  operation = SIOCGIFNETMASK;
      }
      if (!Ioctl(sock,operation,&ifr)) XSRETURN_UNDEF;
+#if defined(__NetBSD__) || defined(__OpenBSD__)
+     ifr.ifr_addr.sa_family = AF_INET;
+#endif
      if (ifr.ifr_addr.sa_family != AF_INET) croak ("Address is not in the AF_INET family.\n");
      RETVAL = inet_ntoa(((struct sockaddr_in*) &ifr.ifr_addr)->sin_addr);
 #endif
@@ -567,7 +573,7 @@
      struct ifreq   ifr;
 #if (defined(USE_GETIFADDRS) && defined(HAVE_SOCKADDR_DL_STRUCT))
      struct ifaddrs* ifap_begin = NULL;
-     struct ifaddrs* ifap       = NULL;
+     struct ifaddrs *ifap, *ifa;
      struct sockaddr_dl* sdl;
      sa_family_t  family;
      char *sdlname, *haddr, *s;
@@ -584,20 +590,17 @@
      getifaddrs(&ifap);
      ifap_begin = ifap;
 
-     while(1) {
-       if (ifap == NULL) break;
-       if (strncmp(name, ifap -> ifa_name, IFNAMSIZ) == 0) {
-         family = ifap -> ifa_addr -> sa_family;
+     for (ifa = ifap; ifa; ifa = ifa->ifa_next) {
+       if (strncmp(name, ifa->ifa_name, IFNAMSIZ) == 0) {
+         family = ifa->ifa_addr->sa_family;
          if (family == AF_LINK) {
-           sdl = (struct sockaddr_dl *) ifap->ifa_addr;
+           sdl = (struct sockaddr_dl *) ifa->ifa_addr;
            haddr = sdl->sdl_data + sdl->sdl_nlen;
            hlen = sdl->sdl_alen;
            break;
          }
        }
-       ifap = ifap -> ifa_next;
      } 
-     freeifaddrs(ifap_begin);
 
      s = hwaddr; 
      s[0] = '\0';
@@ -610,6 +613,9 @@
          s += len;
        }
      }
+
+     freeifaddrs(ifap);
+
      RETVAL = hwaddr;
 #elif (defined(HAS_IOCTL) && defined(SIOCGIFHWADDR))
      bzero((void*)&ifr,sizeof(struct ifreq));
